// Place your key bindings in this file to override the defaults
[
    {
        "key": "Cmd+space j",
        "command": "workbench.action.closePanel",
        "when": "activePanel == workbench.panel.terminal"
    },
    {
        "key": "Cmd+space j",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    {
        "key": "Cmd+space h",
        "command": "workbench.action.navigateLeft"
    },
    {
        "key": "Cmd+space l",
        "command": "workbench.action.navigateRight"
    },
    {
        "key": "Cmd+space k",
        "command": "workbench.action.navigateUp"
    },
    {
        "key": "Cmd+space z",
        "command": "macros.maximizeEditor",
        "when": "editorFocus"
    },
    {
        "key": "Cmd+space z",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "terminalFocus"
    },
    {
        "key": "Cmd+space shift+K",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0001\u004B"
        },
        "when": "terminalFocus"
    },
    {
        "key": "Cmd+space escape",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0001\u001B"
        },
        "when": "terminalFocus"
    },
    {
        "key": "Cmd+space c",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0001\u0063"
        },
        "when": "terminalFocus"
    },
    {
        "key": "Cmd+space 0",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0001\u0030"
        },
        "when": "terminalFocus"
    },
    {
        "key": "Cmd+space 1",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0001\u0031"
        },
        "when": "terminalFocus"
    },
    {
        "key": "Cmd+space 2",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0001\u0032"
        },
        "when": "terminalFocus"
    },
    {
        "key": "Cmd+space 3",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0001\u0033"
        },
        "when": "terminalFocus"
    },
    {
        "key": "Cmd+space 4",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0001\u0034"
        },
        "when": "terminalFocus"
    },
    {
        "key": "Cmd+space 5",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0001\u0035"
        },
        "when": "terminalFocus"
    },
    {
        "key": "Cmd+space 6",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0001\u0036"
        },
        "when": "terminalFocus"
    },
    {
        "key": "Cmd+space 7",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0001\u0037"
        },
        "when": "terminalFocus"
    },
    {
        "key": "Cmd+space 8",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0001\u0038"
        },
        "when": "terminalFocus"
    },
    {
        "key": "Cmd+space space",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0001\u0020"
        },
        "when": "terminalFocus"
    },
    {
        "key": "Cmd+space space",
        "command": "workbench.action.quickSwitchWindow",
        "when": "editorFocus"
    },

    {
        "key": "Cmd+space s",
        "command": "workbench.action.openRecent"
        // "command": "vscodeWorkspaceSwitcher.switchWorkspace"
    },
    {
        "key": "enter",
        "command": "list.select",
        "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
        "key": "ctrl+j",
        "command": "extension.vim_ctrl+n",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "ctrl+k",
        "command": "extension.vim_ctrl+p",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "Ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "Ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "cmd+space shift+]",
        "command": "workbench.action.positionPanelRight"
    },
    {
        "key": "cmd+space shift+[",
        "command": "workbench.action.positionPanelBottom"
    },
    {
        "key": "shift+cmd+t",
        "command": "-workbench.action.reopenClosedEditor"
    },
    {
        "key": "shift+cmd+t",
        "command": "workbench.action.showAllSymbols"
    },
    {
        "key": "cmd+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "cmd+t",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "shift+cmd+o",
        "command": "-workbench.action.gotoSymbol"
    },
    // use j, k to navigate soft wrap
    {
        "key": "up",
        "command": "cursorUp",
        "when": "editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "down",
        "command": "cursorDown",
        "when": "editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "k",
        "command": "cursorUp",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Normal' && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "j",
        "command": "cursorDown",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Normal' && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    // end use j, k to navigate soft wrap
    {
        "key": "shift+;",
        "command": "vim.showQuickpickCmdLine",
        "when": "inZenMode && vim.mode != 'Insert'"
    },
    {
        "key": "Cmd+Ctrl+j",
        "command": "editor.emmet.action.expandAbbreviation",
        "when": "editorTextFocus"
    },
    {
        "key": "Ctrl+h",
        "command": "editor.action.peekDefinition",
        "when": "editorTextFocus"
    }
]