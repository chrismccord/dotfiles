#!/usr/bin/env sh

# Heroku
#

# Postgres equivalent to heroku db:pull.
# Pulls latest heroku pgbackups dump into local database
#
# Usage:
#
# $ heroku_pg_pull [appname] [local database name]
#
function heroku_pg_pull(){
  echo "!   WARNING: Data in the local database '$2' will be destroyed."
  echo "    Type '$2' to overwrite data in local database '$2'"
  read local_database_name\?"> "
  echo
  if [ "$local_database_name" "==" "$2" ]; then
    curl -o heroku_pg_pull_latest_backup.dump `heroku pgbackups:url -a $1`;
    pg_restore --verbose --clean --no-acl --no-owner -h localhost -U `whoami` -d $2 heroku_pg_pull_latest_backup.dump;
    rm heroku_pg_pull_latest_backup.dump;
  else
    echo "Aborted"
  fi
}


# Postgres equivalent to heroku db:push.
# Pushes local database up to heroku application database.
#
# Usage:
#
# $ heroku_pg_push [appname] [local database name]
#
function heroku_pg_push(){
  echo "!   WARNING: Data in the Heroku app '$1' will be destroyed."
  echo "    Type '$1' to overwrite data in Heroku app '$1'"
  read heroku_app_name\?"> "
  echo
  if [ "$heroku_app_name" "==" "$1" ]; then
    heroku pg:reset DATABASE_URL -a $1
    pg_dump -xO $2 | psql `heroku config:get DATABASE_URL -a $1`
  else
    echo "Aborted"
  fi
}


# Open the gem directory in your favorite editor
function gemedit {
  GEMDIR=`gem env gemdir`/gems
  open -a "$EDITOR" $GEMDIR/`ls $GEMDIR | grep $1 | sort | tail -1`
}


# simple script to shutdown the running Emacs daemon

# emacsclient options for reference
# -a Alternate editor, runs bin/false in this case
# -e eval the script

# If the server-process is bound and the server is in a good state, then kill
# the server

function es {
  server_ok() {
    emacsclient -a "false" -e "(boundp 'server-process)"
  }

  if [ "t" "==" "$(server_ok)" ]; then
      echo "Shutting down Emacs server"
      # wasn't removing emacs from ALT-TAB on mac
      # emacsclient -e "(server-force-delete)"
      emacsclient -e '(kill-emacs)'
      exec /usr/local/bin/emacs --daemon
      echo "Running"
  else
      echo "Emacs server not running. Starting now...."
      exec /usr/local/bin/emacs --daemon
      echo "Running"
  fi
}

function et {
    if [ $# -eq 0]; then
        emacsclient -t .
    else
        emacsclient -t $@
   fi
}
